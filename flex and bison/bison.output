Nonterminals useless in grammar

    statements


Terminals unused in grammar

    "break"
    "case"
    "catch"
    "class"
    "continue"
    "debugger"
    "default"
    "delete"
    "do"
    "else"
    "export"
    "extends"
    "finally"
    "if"
    "import"
    "in"
    "instanceof"
    "return"
    "super"
    "swich"
    "throw"
    "try"
    "typeof"
    "while"
    "with"
    "yield"
    "enum"
    "implements"
    "interface"
    "package"
    "private"
    "protected"
    "public"
    "await"
    "abstract"
    "boolean"
    "byte"
    "double"
    "final"
    "goto"
    "long"
    "native"
    "short"
    "synchronised"
    "throws"
    "transient"
    "volatile"
    "null"
    "true"
    "false"
    "arguments"
    "get"
    "set"
    "module"
    ":"
    "&"
    "::"
    "<<"
    ">>"
    "char const"
    "float const"
    "string const"


Rules useless in grammar

   60 statements: statements statement
   61           | statement


Rules useless in parser due to conflicts

   54 decl_statements: for_statement
   56                | %empty


State 10 conflicts: 1 reduce/reduce
State 26 conflicts: 1 reduce/reduce
State 102 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program "end of file"

    1 program: global_declarations main_function

    2 global_declarations: %empty

    3 $@1: %empty

    4 for_statement: "for" "(" $@1 optexpr ";" optexpr ";" optexpr ")" "{" statement "}"
    5              | %empty

    6 optexpr: general_expression
    7        | %empty

    8 general_expression: general_expression "," general_expression
    9                   | assignment

   10 assignment: variable "=" assignment
   11           | expression

   12 expression: expression "||" expression
   13           | expression "&&" expression
   14           | expression "== or !=" expression
   15           | expression "> or >= or < or <=" expression
   16           | expression "+ or -" expression
   17           | expression "* or / or %" expression
   18           | "!" expression
   19           | "+ or -" expression
   20           | "sizeof" expression
   21           | "-- or ++" variable
   22           | variable "-- or ++"
   23           | variable
   24           | variable "(" expression_list ")"
   25           | "new" "(" general_expression ")"
   26           | constant
   27           | "(" general_expression ")"
   28           | "(" standard_type ")"
   29           | listexpression

   30 standard_type: "char"
   31              | "int"
   32              | "float"
   33              | "string literal"
   34              | "void"
   35              | "let"
   36              | "var"

   37 expression_list: general_expression
   38                | %empty

   39 listexpression: "[" expression_list "]"

   40 variable: variable "[" general_expression "]"
   41         | variable "." "id"
   42         | "listfunc" "(" general_expression ")"
   43         | decltype "id"
   44         | decltype "int const"
   45         | "this"

   46 decltype: "let"
   47         | "static"
   48         | %empty

   49 constant: "constant"

   50 statement: expression_statement
   51          | for_statement

   52 expression_statement: general_expression ";"
   53                     | for_statement

   54 decl_statements: for_statement
   55                | expression_statement
   56                | %empty

   57 main_function: main_header "{" decl_statements "}"

   58 main_header: "function" "id" "(" ")"
   59            | error "id" "(" ")"


Terminals, with rules where they appear

    "end of file" <strval> (0) 0
    error (256) 59
    "break" <strval> (258)
    "case" <strval> (259)
    "catch" <strval> (260)
    "class" <strval> (261)
    "constant" <strval> (262) 49
    "continue" <strval> (263)
    "debugger" <strval> (264)
    "default" <strval> (265)
    "delete" <strval> (266)
    "do" <strval> (267)
    "else" <strval> (268)
    "export" <strval> (269)
    "extends" <strval> (270)
    "finally" <strval> (271)
    "for" <strval> (272) 4
    "function" <strval> (273) 58
    "if" <strval> (274)
    "import" <strval> (275)
    "in" <strval> (276)
    "instanceof" <strval> (277)
    "new" <strval> (278) 25
    "return" <strval> (279)
    "super" <strval> (280)
    "swich" <strval> (281)
    "this" <strval> (282) 45
    "throw" <strval> (283)
    "try" <strval> (284)
    "typeof" <strval> (285)
    "var" <strval> (286) 36
    "void" <strval> (287) 34
    "while" <strval> (288)
    "with" <strval> (289)
    "yield" <strval> (290)
    "enum" <strval> (291)
    "implements" <strval> (292)
    "interface" <strval> (293)
    "let" <strval> (294) 35 46
    "package" <strval> (295)
    "private" <strval> (296)
    "protected" <strval> (297)
    "public" <strval> (298)
    "static" <strval> (299) 47
    "await" <strval> (300)
    "abstract" <strval> (301)
    "boolean" <strval> (302)
    "byte" <strval> (303)
    "char" <strval> (304) 30
    "double" <doubleval> (305)
    "final" <strval> (306)
    "float" <doubleval> (307) 32
    "goto" <strval> (308)
    "int" <intval> (309) 31
    "long" <doubleval> (310)
    "native" <strval> (311)
    "short" <intval> (312)
    "synchronised" <strval> (313)
    "throws" <strval> (314)
    "transient" <strval> (315)
    "volatile" <strval> (316)
    "null" <strval> (317)
    "true" <strval> (318)
    "false" <strval> (319)
    "arguments" <strval> (320)
    "get" <strval> (321)
    "set" <strval> (322)
    "module" <strval> (323)
    "string literal" <strval> (324) 33
    "id" <strval> (325) 41 43 58 59
    "||" <strval> (326) 12
    "&&" <strval> (327) 13
    "== or !=" <strval> (328) 14
    "+ or -" <strval> (329) 16 19
    "* or / or %" <strval> (330) 17
    "-- or ++" <strval> (331) 21 22
    "sizeof" <strval> (332) 20
    "listfunc" <strval> (333) 42
    "(" <strval> (334) 4 24 25 27 28 42 58 59
    ")" <strval> (335) 4 24 25 27 28 42 58 59
    ";" <strval> (336) 4 52
    "." <strval> (337) 41
    "," <strval> (338) 8
    ":" <strval> (339)
    "[" <strval> (340) 39 40
    "]" <strval> (341) 39 40
    "&" <strval> (342)
    "{" <strval> (343) 4 57
    "}" <strval> (344) 4 57
    "::" <strval> (345)
    "<<" <strval> (346)
    ">>" <strval> (347)
    "=" <strval> (348) 10
    "char const" <strval> (349)
    "float const" <strval> (350)
    "int const" <strval> (351) 44
    "string const" <strval> (352)
    "!" <strval> (353) 18
    "> or >= or < or <=" <strval> (354) 15
    UMINUS (355)


Nonterminals, with rules where they appear

    $accept (101)
        on left: 0
    program <strval> (102)
        on left: 1
        on right: 0
    global_declarations <strval> (103)
        on left: 2
        on right: 1
    for_statement <strval> (104)
        on left: 4 5
        on right: 51 53 54
    $@1 (105)
        on left: 3
        on right: 4
    optexpr <strval> (106)
        on left: 6 7
        on right: 4
    general_expression <strval> (107)
        on left: 8 9
        on right: 6 8 25 27 37 40 42 52
    assignment <strval> (108)
        on left: 10 11
        on right: 9 10
    expression <strval> (109)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 11 12 13 14 15 16 17 18 19 20
    standard_type <strval> (110)
        on left: 30 31 32 33 34 35 36
        on right: 28
    expression_list <strval> (111)
        on left: 37 38
        on right: 24 39
    listexpression <strval> (112)
        on left: 39
        on right: 29
    variable <strval> (113)
        on left: 40 41 42 43 44 45
        on right: 10 21 22 23 24 40 41
    decltype <strval> (114)
        on left: 46 47 48
        on right: 43 44
    constant <strval> (115)
        on left: 49
        on right: 26
    statement <strval> (116)
        on left: 50 51
        on right: 4
    expression_statement <strval> (117)
        on left: 52 53
        on right: 50 55
    decl_statements (118)
        on left: 54 55 56
        on right: 57
    main_function <strval> (119)
        on left: 57
        on right: 1
    main_header (120)
        on left: 58 59
        on right: 57


State 0

    0 $accept: • program "end of file"

    $default  reduce using rule 2 (global_declarations)

    program              go to state 1
    global_declarations  go to state 2


State 1

    0 $accept: program • "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: global_declarations • main_function

    error       shift, and go to state 4
    "function"  shift, and go to state 5

    main_function  go to state 6
    main_header    go to state 7


State 3

    0 $accept: program "end of file" •

    $default  accept


State 4

   59 main_header: error • "id" "(" ")"

    "id"  shift, and go to state 8


State 5

   58 main_header: "function" • "id" "(" ")"

    "id"  shift, and go to state 9


State 6

    1 program: global_declarations main_function •

    $default  reduce using rule 1 (program)


State 7

   57 main_function: main_header • "{" decl_statements "}"

    "{"  shift, and go to state 10


State 8

   59 main_header: error "id" • "(" ")"

    "("  shift, and go to state 11


State 9

   58 main_header: "function" "id" • "(" ")"

    "("  shift, and go to state 12


State 10

   57 main_function: main_header "{" • decl_statements "}"

    "constant"  shift, and go to state 13
    "for"       shift, and go to state 14
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    "}"       reduce using rule 5 (for_statement)
    "}"       [reduce using rule 56 (decl_statements)]
    $default  reduce using rule 48 (decltype)

    for_statement         go to state 26
    general_expression    go to state 27
    assignment            go to state 28
    expression            go to state 29
    listexpression        go to state 30
    variable              go to state 31
    decltype              go to state 32
    constant              go to state 33
    expression_statement  go to state 34
    decl_statements       go to state 35


State 11

   59 main_header: error "id" "(" • ")"

    ")"  shift, and go to state 36


State 12

   58 main_header: "function" "id" "(" • ")"

    ")"  shift, and go to state 37


State 13

   49 constant: "constant" •

    $default  reduce using rule 49 (constant)


State 14

    4 for_statement: "for" • "(" $@1 optexpr ";" optexpr ";" optexpr ")" "{" statement "}"

    "("  shift, and go to state 38


State 15

   25 expression: "new" • "(" general_expression ")"

    "("  shift, and go to state 39


State 16

   45 variable: "this" •

    $default  reduce using rule 45 (variable)


State 17

   46 decltype: "let" •

    $default  reduce using rule 46 (decltype)


State 18

   47 decltype: "static" •

    $default  reduce using rule 47 (decltype)


State 19

   19 expression: "+ or -" • expression

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    expression      go to state 40
    listexpression  go to state 30
    variable        go to state 41
    decltype        go to state 32
    constant        go to state 33


State 20

   21 expression: "-- or ++" • variable

    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "listfunc"  shift, and go to state 22

    $default  reduce using rule 48 (decltype)

    variable  go to state 42
    decltype  go to state 32


State 21

   20 expression: "sizeof" • expression

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    expression      go to state 43
    listexpression  go to state 30
    variable        go to state 41
    decltype        go to state 32
    constant        go to state 33


State 22

   42 variable: "listfunc" • "(" general_expression ")"

    "("  shift, and go to state 44


State 23

   27 expression: "(" • general_expression ")"
   28           | "(" • standard_type ")"

    "constant"        shift, and go to state 13
    "new"             shift, and go to state 15
    "this"            shift, and go to state 16
    "var"             shift, and go to state 45
    "void"            shift, and go to state 46
    "let"             shift, and go to state 47
    "static"          shift, and go to state 18
    "char"            shift, and go to state 48
    "float"           shift, and go to state 49
    "int"             shift, and go to state 50
    "string literal"  shift, and go to state 51
    "+ or -"          shift, and go to state 19
    "-- or ++"        shift, and go to state 20
    "sizeof"          shift, and go to state 21
    "listfunc"        shift, and go to state 22
    "("               shift, and go to state 23
    "["               shift, and go to state 24
    "!"               shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    general_expression  go to state 52
    assignment          go to state 28
    expression          go to state 29
    standard_type       go to state 53
    listexpression      go to state 30
    variable            go to state 31
    decltype            go to state 32
    constant            go to state 33


State 24

   39 listexpression: "[" • expression_list "]"

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    "]"       reduce using rule 38 (expression_list)
    $default  reduce using rule 48 (decltype)

    general_expression  go to state 54
    assignment          go to state 28
    expression          go to state 29
    expression_list     go to state 55
    listexpression      go to state 30
    variable            go to state 31
    decltype            go to state 32
    constant            go to state 33


State 25

   18 expression: "!" • expression

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    expression      go to state 56
    listexpression  go to state 30
    variable        go to state 41
    decltype        go to state 32
    constant        go to state 33


State 26

   53 expression_statement: for_statement •
   54 decl_statements: for_statement •

    "}"       reduce using rule 53 (expression_statement)
    "}"       [reduce using rule 54 (decl_statements)]
    $default  reduce using rule 53 (expression_statement)


State 27

    8 general_expression: general_expression • "," general_expression
   52 expression_statement: general_expression • ";"

    ";"  shift, and go to state 57
    ","  shift, and go to state 58


State 28

    9 general_expression: assignment •

    $default  reduce using rule 9 (general_expression)


State 29

   11 assignment: expression •
   12 expression: expression • "||" expression
   13           | expression • "&&" expression
   14           | expression • "== or !=" expression
   15           | expression • "> or >= or < or <=" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or %" expression

    "||"                  shift, and go to state 59
    "&&"                  shift, and go to state 60
    "== or !="            shift, and go to state 61
    "+ or -"              shift, and go to state 62
    "* or / or %"         shift, and go to state 63
    "> or >= or < or <="  shift, and go to state 64

    $default  reduce using rule 11 (assignment)


State 30

   29 expression: listexpression •

    $default  reduce using rule 29 (expression)


State 31

   10 assignment: variable • "=" assignment
   22 expression: variable • "-- or ++"
   23           | variable •
   24           | variable • "(" expression_list ")"
   40 variable: variable • "[" general_expression "]"
   41         | variable • "." "id"

    "-- or ++"  shift, and go to state 65
    "("         shift, and go to state 66
    "."         shift, and go to state 67
    "["         shift, and go to state 68
    "="         shift, and go to state 69

    $default  reduce using rule 23 (expression)


State 32

   43 variable: decltype • "id"
   44         | decltype • "int const"

    "id"         shift, and go to state 70
    "int const"  shift, and go to state 71


State 33

   26 expression: constant •

    $default  reduce using rule 26 (expression)


State 34

   55 decl_statements: expression_statement •

    $default  reduce using rule 55 (decl_statements)


State 35

   57 main_function: main_header "{" decl_statements • "}"

    "}"  shift, and go to state 72


State 36

   59 main_header: error "id" "(" ")" •

    $default  reduce using rule 59 (main_header)


State 37

   58 main_header: "function" "id" "(" ")" •

    $default  reduce using rule 58 (main_header)


State 38

    4 for_statement: "for" "(" • $@1 optexpr ";" optexpr ";" optexpr ")" "{" statement "}"

    $default  reduce using rule 3 ($@1)

    $@1  go to state 73


State 39

   25 expression: "new" "(" • general_expression ")"

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    general_expression  go to state 74
    assignment          go to state 28
    expression          go to state 29
    listexpression      go to state 30
    variable            go to state 31
    decltype            go to state 32
    constant            go to state 33


State 40

   12 expression: expression • "||" expression
   13           | expression • "&&" expression
   14           | expression • "== or !=" expression
   15           | expression • "> or >= or < or <=" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or %" expression
   19           | "+ or -" expression •

    $default  reduce using rule 19 (expression)


State 41

   22 expression: variable • "-- or ++"
   23           | variable •
   24           | variable • "(" expression_list ")"
   40 variable: variable • "[" general_expression "]"
   41         | variable • "." "id"

    "-- or ++"  shift, and go to state 65
    "("         shift, and go to state 66
    "."         shift, and go to state 67
    "["         shift, and go to state 68

    $default  reduce using rule 23 (expression)


State 42

   21 expression: "-- or ++" variable •
   40 variable: variable • "[" general_expression "]"
   41         | variable • "." "id"

    "."  shift, and go to state 67
    "["  shift, and go to state 68

    $default  reduce using rule 21 (expression)


State 43

   12 expression: expression • "||" expression
   13           | expression • "&&" expression
   14           | expression • "== or !=" expression
   15           | expression • "> or >= or < or <=" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or %" expression
   20           | "sizeof" expression •

    $default  reduce using rule 20 (expression)


State 44

   42 variable: "listfunc" "(" • general_expression ")"

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    general_expression  go to state 75
    assignment          go to state 28
    expression          go to state 29
    listexpression      go to state 30
    variable            go to state 31
    decltype            go to state 32
    constant            go to state 33


State 45

   36 standard_type: "var" •

    $default  reduce using rule 36 (standard_type)


State 46

   34 standard_type: "void" •

    $default  reduce using rule 34 (standard_type)


State 47

   35 standard_type: "let" •
   46 decltype: "let" •

    ")"       reduce using rule 35 (standard_type)
    $default  reduce using rule 46 (decltype)


State 48

   30 standard_type: "char" •

    $default  reduce using rule 30 (standard_type)


State 49

   32 standard_type: "float" •

    $default  reduce using rule 32 (standard_type)


State 50

   31 standard_type: "int" •

    $default  reduce using rule 31 (standard_type)


State 51

   33 standard_type: "string literal" •

    $default  reduce using rule 33 (standard_type)


State 52

    8 general_expression: general_expression • "," general_expression
   27 expression: "(" general_expression • ")"

    ")"  shift, and go to state 76
    ","  shift, and go to state 58


State 53

   28 expression: "(" standard_type • ")"

    ")"  shift, and go to state 77


State 54

    8 general_expression: general_expression • "," general_expression
   37 expression_list: general_expression •

    ","  shift, and go to state 58

    $default  reduce using rule 37 (expression_list)


State 55

   39 listexpression: "[" expression_list • "]"

    "]"  shift, and go to state 78


State 56

   12 expression: expression • "||" expression
   13           | expression • "&&" expression
   14           | expression • "== or !=" expression
   15           | expression • "> or >= or < or <=" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or %" expression
   18           | "!" expression •

    $default  reduce using rule 18 (expression)


State 57

   52 expression_statement: general_expression ";" •

    $default  reduce using rule 52 (expression_statement)


State 58

    8 general_expression: general_expression "," • general_expression

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    general_expression  go to state 79
    assignment          go to state 28
    expression          go to state 29
    listexpression      go to state 30
    variable            go to state 31
    decltype            go to state 32
    constant            go to state 33


State 59

   12 expression: expression "||" • expression

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    expression      go to state 80
    listexpression  go to state 30
    variable        go to state 41
    decltype        go to state 32
    constant        go to state 33


State 60

   13 expression: expression "&&" • expression

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    expression      go to state 81
    listexpression  go to state 30
    variable        go to state 41
    decltype        go to state 32
    constant        go to state 33


State 61

   14 expression: expression "== or !=" • expression

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    expression      go to state 82
    listexpression  go to state 30
    variable        go to state 41
    decltype        go to state 32
    constant        go to state 33


State 62

   16 expression: expression "+ or -" • expression

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    expression      go to state 83
    listexpression  go to state 30
    variable        go to state 41
    decltype        go to state 32
    constant        go to state 33


State 63

   17 expression: expression "* or / or %" • expression

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    expression      go to state 84
    listexpression  go to state 30
    variable        go to state 41
    decltype        go to state 32
    constant        go to state 33


State 64

   15 expression: expression "> or >= or < or <=" • expression

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    expression      go to state 85
    listexpression  go to state 30
    variable        go to state 41
    decltype        go to state 32
    constant        go to state 33


State 65

   22 expression: variable "-- or ++" •

    $default  reduce using rule 22 (expression)


State 66

   24 expression: variable "(" • expression_list ")"

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    ")"       reduce using rule 38 (expression_list)
    $default  reduce using rule 48 (decltype)

    general_expression  go to state 54
    assignment          go to state 28
    expression          go to state 29
    expression_list     go to state 86
    listexpression      go to state 30
    variable            go to state 31
    decltype            go to state 32
    constant            go to state 33


State 67

   41 variable: variable "." • "id"

    "id"  shift, and go to state 87


State 68

   40 variable: variable "[" • general_expression "]"

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    general_expression  go to state 88
    assignment          go to state 28
    expression          go to state 29
    listexpression      go to state 30
    variable            go to state 31
    decltype            go to state 32
    constant            go to state 33


State 69

   10 assignment: variable "=" • assignment

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    $default  reduce using rule 48 (decltype)

    assignment      go to state 89
    expression      go to state 29
    listexpression  go to state 30
    variable        go to state 31
    decltype        go to state 32
    constant        go to state 33


State 70

   43 variable: decltype "id" •

    $default  reduce using rule 43 (variable)


State 71

   44 variable: decltype "int const" •

    $default  reduce using rule 44 (variable)


State 72

   57 main_function: main_header "{" decl_statements "}" •

    $default  reduce using rule 57 (main_function)


State 73

    4 for_statement: "for" "(" $@1 • optexpr ";" optexpr ";" optexpr ")" "{" statement "}"

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    ";"       reduce using rule 7 (optexpr)
    $default  reduce using rule 48 (decltype)

    optexpr             go to state 90
    general_expression  go to state 91
    assignment          go to state 28
    expression          go to state 29
    listexpression      go to state 30
    variable            go to state 31
    decltype            go to state 32
    constant            go to state 33


State 74

    8 general_expression: general_expression • "," general_expression
   25 expression: "new" "(" general_expression • ")"

    ")"  shift, and go to state 92
    ","  shift, and go to state 58


State 75

    8 general_expression: general_expression • "," general_expression
   42 variable: "listfunc" "(" general_expression • ")"

    ")"  shift, and go to state 93
    ","  shift, and go to state 58


State 76

   27 expression: "(" general_expression ")" •

    $default  reduce using rule 27 (expression)


State 77

   28 expression: "(" standard_type ")" •

    $default  reduce using rule 28 (expression)


State 78

   39 listexpression: "[" expression_list "]" •

    $default  reduce using rule 39 (listexpression)


State 79

    8 general_expression: general_expression • "," general_expression
    8                   | general_expression "," general_expression •

    $default  reduce using rule 8 (general_expression)


State 80

   12 expression: expression • "||" expression
   12           | expression "||" expression •
   13           | expression • "&&" expression
   14           | expression • "== or !=" expression
   15           | expression • "> or >= or < or <=" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or %" expression

    "&&"                  shift, and go to state 60
    "== or !="            shift, and go to state 61
    "+ or -"              shift, and go to state 62
    "* or / or %"         shift, and go to state 63
    "> or >= or < or <="  shift, and go to state 64

    $default  reduce using rule 12 (expression)


State 81

   12 expression: expression • "||" expression
   13           | expression • "&&" expression
   13           | expression "&&" expression •
   14           | expression • "== or !=" expression
   15           | expression • "> or >= or < or <=" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or %" expression

    "== or !="            shift, and go to state 61
    "+ or -"              shift, and go to state 62
    "* or / or %"         shift, and go to state 63
    "> or >= or < or <="  shift, and go to state 64

    $default  reduce using rule 13 (expression)


State 82

   12 expression: expression • "||" expression
   13           | expression • "&&" expression
   14           | expression • "== or !=" expression
   14           | expression "== or !=" expression •
   15           | expression • "> or >= or < or <=" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or %" expression

    "+ or -"              shift, and go to state 62
    "* or / or %"         shift, and go to state 63
    "> or >= or < or <="  shift, and go to state 64

    $default  reduce using rule 14 (expression)


State 83

   12 expression: expression • "||" expression
   13           | expression • "&&" expression
   14           | expression • "== or !=" expression
   15           | expression • "> or >= or < or <=" expression
   16           | expression • "+ or -" expression
   16           | expression "+ or -" expression •
   17           | expression • "* or / or %" expression

    "* or / or %"  shift, and go to state 63

    $default  reduce using rule 16 (expression)


State 84

   12 expression: expression • "||" expression
   13           | expression • "&&" expression
   14           | expression • "== or !=" expression
   15           | expression • "> or >= or < or <=" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or %" expression
   17           | expression "* or / or %" expression •

    $default  reduce using rule 17 (expression)


State 85

   12 expression: expression • "||" expression
   13           | expression • "&&" expression
   14           | expression • "== or !=" expression
   15           | expression • "> or >= or < or <=" expression
   15           | expression "> or >= or < or <=" expression •
   16           | expression • "+ or -" expression
   17           | expression • "* or / or %" expression

    "+ or -"       shift, and go to state 62
    "* or / or %"  shift, and go to state 63

    $default  reduce using rule 15 (expression)


State 86

   24 expression: variable "(" expression_list • ")"

    ")"  shift, and go to state 94


State 87

   41 variable: variable "." "id" •

    $default  reduce using rule 41 (variable)


State 88

    8 general_expression: general_expression • "," general_expression
   40 variable: variable "[" general_expression • "]"

    ","  shift, and go to state 58
    "]"  shift, and go to state 95


State 89

   10 assignment: variable "=" assignment •

    $default  reduce using rule 10 (assignment)


State 90

    4 for_statement: "for" "(" $@1 optexpr • ";" optexpr ";" optexpr ")" "{" statement "}"

    ";"  shift, and go to state 96


State 91

    6 optexpr: general_expression •
    8 general_expression: general_expression • "," general_expression

    ","  shift, and go to state 58

    $default  reduce using rule 6 (optexpr)


State 92

   25 expression: "new" "(" general_expression ")" •

    $default  reduce using rule 25 (expression)


State 93

   42 variable: "listfunc" "(" general_expression ")" •

    $default  reduce using rule 42 (variable)


State 94

   24 expression: variable "(" expression_list ")" •

    $default  reduce using rule 24 (expression)


State 95

   40 variable: variable "[" general_expression "]" •

    $default  reduce using rule 40 (variable)


State 96

    4 for_statement: "for" "(" $@1 optexpr ";" • optexpr ";" optexpr ")" "{" statement "}"

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    ";"       reduce using rule 7 (optexpr)
    $default  reduce using rule 48 (decltype)

    optexpr             go to state 97
    general_expression  go to state 91
    assignment          go to state 28
    expression          go to state 29
    listexpression      go to state 30
    variable            go to state 31
    decltype            go to state 32
    constant            go to state 33


State 97

    4 for_statement: "for" "(" $@1 optexpr ";" optexpr • ";" optexpr ")" "{" statement "}"

    ";"  shift, and go to state 98


State 98

    4 for_statement: "for" "(" $@1 optexpr ";" optexpr ";" • optexpr ")" "{" statement "}"

    "constant"  shift, and go to state 13
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    ")"       reduce using rule 7 (optexpr)
    $default  reduce using rule 48 (decltype)

    optexpr             go to state 99
    general_expression  go to state 91
    assignment          go to state 28
    expression          go to state 29
    listexpression      go to state 30
    variable            go to state 31
    decltype            go to state 32
    constant            go to state 33


State 99

    4 for_statement: "for" "(" $@1 optexpr ";" optexpr ";" optexpr • ")" "{" statement "}"

    ")"  shift, and go to state 100


State 100

    4 for_statement: "for" "(" $@1 optexpr ";" optexpr ";" optexpr ")" • "{" statement "}"

    "{"  shift, and go to state 101


State 101

    4 for_statement: "for" "(" $@1 optexpr ";" optexpr ";" optexpr ")" "{" • statement "}"

    "constant"  shift, and go to state 13
    "for"       shift, and go to state 14
    "new"       shift, and go to state 15
    "this"      shift, and go to state 16
    "let"       shift, and go to state 17
    "static"    shift, and go to state 18
    "+ or -"    shift, and go to state 19
    "-- or ++"  shift, and go to state 20
    "sizeof"    shift, and go to state 21
    "listfunc"  shift, and go to state 22
    "("         shift, and go to state 23
    "["         shift, and go to state 24
    "!"         shift, and go to state 25

    "}"       reduce using rule 5 (for_statement)
    $default  reduce using rule 48 (decltype)

    for_statement         go to state 102
    general_expression    go to state 27
    assignment            go to state 28
    expression            go to state 29
    listexpression        go to state 30
    variable              go to state 31
    decltype              go to state 32
    constant              go to state 33
    statement             go to state 103
    expression_statement  go to state 104


State 102

   51 statement: for_statement •
   53 expression_statement: for_statement •

    "}"       reduce using rule 51 (statement)
    "}"       [reduce using rule 53 (expression_statement)]
    $default  reduce using rule 51 (statement)


State 103

    4 for_statement: "for" "(" $@1 optexpr ";" optexpr ";" optexpr ")" "{" statement • "}"

    "}"  shift, and go to state 105


State 104

   50 statement: expression_statement •

    $default  reduce using rule 50 (statement)


State 105

    4 for_statement: "for" "(" $@1 optexpr ";" optexpr ";" optexpr ")" "{" statement "}" •

    $default  reduce using rule 4 (for_statement)
